import pandas as pd
df=pd.read_csv("C:/Users/dhana/Downloads/titanic.csv")
print(df)

from sklearn.linear_model import LinearRegression
from sklearn.linear_model import LogisticRegression
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error
from sklearn.metrics import accuracy_score

lr=LinearRegression()
logr=LogisticRegression()

x=df.drop('PassengerId',axis=1)
x = x.drop('Survived', axis=1)
x = x.drop('Name',axis=1)
x = x.drop('Ticket',axis=1)
x = x.drop('Cabin',axis=1)
x = x.drop('Embarked',axis=1)
x = x.drop('Parch',axis=1)
x = x.drop('Sex',axis=1)

y = df['Survived']
print(x)
print(y)

x['Age'].fillna((x['Age'].max()), inplace=True)
x['Fare'].fillna((x['Fare'].mean()), inplace=True)

x_train,x_test,y_train,y_test=train_test_split(x,y,random_state=0,test_size=0.3)

train=lr.fit(x_train,y_train)
y_pred=lr.predict(x_test)
print("Linear Regression = ")
print(mean_squared_error(y_test,y_pred))

train1=logr.fit(x_train,y_train)
y_pred1=logr.predict(x_test)
print("Logistic Regression = ")
print(accuracy_score(y_test,y_pred1))

'''
Output:

     PassengerId  Survived  Pclass  ...     Fare Cabin  Embarked
0              1         0       3  ...   7.2500   NaN         S
1              2         1       1  ...  71.2833   C85         C
2              3         1       3  ...   7.9250   NaN         S
3              4         1       1  ...  53.1000  C123         S
4              5         0       3  ...   8.0500   NaN         S
..           ...       ...     ...  ...      ...   ...       ...
886          887         0       2  ...  13.0000   NaN         S
887          888         1       1  ...  30.0000   B42         S
888          889         0       3  ...  23.4500   NaN         S
889          890         1       1  ...  30.0000  C148         C
890          891         0       3  ...   7.7500   NaN         Q

[891 rows x 12 columns]
     Pclass   Age  SibSp     Fare
0         3  22.0      1   7.2500
1         1  38.0      1  71.2833
2         3  26.0      0   7.9250
3         1  35.0      1  53.1000
4         3  35.0      0   8.0500
..      ...   ...    ...      ...
886       2  27.0      0  13.0000
887       1  19.0      0  30.0000
888       3   NaN      1  23.4500
889       1  26.0      0  30.0000
890       3  32.0      0   7.7500

[891 rows x 4 columns]
0      0
1      1
2      1
3      1
4      0
      ..
886    0
887    1
888    0
889    1
890    0
Name: Survived, Length: 891, dtype: int64
Linear Regression = 
0.19759896433533178
Logistic Regression = 
0.7126865671641791
'''
